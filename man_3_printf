.TH _PRINTF 3 "October 2025" "Holberton School" "C Library Functions"
.SH NAME
_printf \- custom implementation of the C library printf function
.SH SYNOPSIS
.B #include "main.h"
.br
.B int _printf(const char *format, ...);
.SH DESCRIPTION
The
.B _printf()
function produces output according to a format.

The format string is composed of zero or more directives. Ordinary characters are copied unchanged to the output stream.

A directive begins with the '%' character. The following conversion specifiers are supported:
.TP
.B %c
Prints a single character.
.TP
.B %s
Prints a string of characters. If the string is NULL, the text "(null)" is printed instead.
.TP
.B %%
Prints a literal percent sign.
.TP
.B %d, %i
Prints a signed decimal integer. Negative numbers are handled correctly.

The function writes output to the standard output stream (stdout).
It does not implement buffer handling, field width, precision, or length modifiers.
.SH RETURN VALUE
Upon successful return, these functions return the number of characters printed
(excluding the null byte used to end output to strings).
If an output error occurs, a negative value is returned.
.SH INTERNAL FUNCTIONS
The implementation of
.B _printf()
relies on the following helper functions:
.TP
.B handle_specifier(char c, va_list args)
Chooses the correct printing routine based on the format specifier.
.TP
.B print_int(int n)
Handles printing of signed integers for the %d and %i specifiers.
.TP
.B _putchar(char c)
Writes a single character to the standard output (stdout).
.SH SEE ALSO
printf(3)
.SH AUTHOR
Written as a project for Holberton School by Ali Abdullah and Alanoud Alharthi.
